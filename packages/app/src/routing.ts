// This file is autogenerated, do not edit directly.
import { generatePath } from 'react-router-dom'
import QueryString from 'query-string'

export interface DashboardParams {
  pathParams: {
    workspaceKey: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface WorkspacesettingslanguagesParams {
  pathParams: {
    workspaceKey: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface WorkspacesettingsintegrationsParams {
  pathParams: {
    workspaceKey: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface WorkspacesettingsmembersParams {
  pathParams: {
    workspaceKey: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface UsersettingsParams {
  pathParams: {
    workspaceKey: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface ProjectphrasesParams {
  pathParams: {
    workspaceKey: string
    projectId: string
    revisionId: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface ProjectsettingsParams {
  pathParams: {
    workspaceKey: string
    projectId: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface ProjectimportParams {
  pathParams: {
    workspaceKey: string
    projectId: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface ProjectimportfromfileParams {
  pathParams: {
    workspaceKey: string
    projectId: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface ProjectexportParams {
  pathParams: {
    workspaceKey: string
    projectId: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface ProjectdestinationParams {
  pathParams: {
    workspaceKey: string
    projectId: string
    destinationId: string
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface SigninParams {
  pathParams?: {
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface SignupParams {
  pathParams?: {
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface ForgotpasswordParams {
  pathParams?: {
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface OnboardingyouParams {
  pathParams?: {
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface OnboardingcreateworkspaceParams {
  pathParams?: {
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

export interface OnboardingjoinworkspaceParams {
  pathParams?: {
    [k: string]: string | undefined
  }
  queryParams?: {
    [k: string]: string | undefined
  }
}

const routes = {
  dashboard: {
    url: (params: DashboardParams) => {
      const path = generatePath('/:workspaceKey', params.pathParams)
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey',
    metadata: {},
  },
  workspaceSettingsLanguages: {
    url: (params: WorkspacesettingslanguagesParams) => {
      const path = generatePath(
        '/:workspaceKey/settings/languages',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/settings/languages',
    metadata: {},
  },
  workspaceSettingsIntegrations: {
    url: (params: WorkspacesettingsintegrationsParams) => {
      const path = generatePath(
        '/:workspaceKey/settings/integrations',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/settings/integrations',
    metadata: {},
  },
  workspaceSettingsMembers: {
    url: (params: WorkspacesettingsmembersParams) => {
      const path = generatePath(
        '/:workspaceKey/settings/members',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/settings/members',
    metadata: {},
  },
  userSettings: {
    url: (params: UsersettingsParams) => {
      const path = generatePath(
        '/:workspaceKey/settings/user',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/settings/user',
    metadata: {},
  },
  projectPhrases: {
    url: (params: ProjectphrasesParams) => {
      const path = generatePath(
        '/:workspaceKey/projects/:projectId/phrases/:revisionId',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/projects/:projectId/phrases/:revisionId',
    metadata: {},
  },
  projectSettings: {
    url: (params: ProjectsettingsParams) => {
      const path = generatePath(
        '/:workspaceKey/projects/:projectId/settings',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/projects/:projectId/settings',
    metadata: {},
  },
  projectImport: {
    url: (params: ProjectimportParams) => {
      const path = generatePath(
        '/:workspaceKey/projects/:projectId/import',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/projects/:projectId/import',
    metadata: {},
  },
  projectImportFromFile: {
    url: (params: ProjectimportfromfileParams) => {
      const path = generatePath(
        '/:workspaceKey/projects/:projectId/import/from-file',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/projects/:projectId/import/from-file',
    metadata: {},
  },
  projectExport: {
    url: (params: ProjectexportParams) => {
      const path = generatePath(
        '/:workspaceKey/projects/:projectId/export',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/projects/:projectId/export',
    metadata: {},
  },
  projectDestination: {
    url: (params: ProjectdestinationParams) => {
      const path = generatePath(
        '/:workspaceKey/projects/:projectId/destinations/:destinationId',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/:workspaceKey/projects/:projectId/destinations/:destinationId',
    metadata: {},
  },
  signIn: {
    url: (params: SigninParams) => {
      const path = generatePath('/sign-in', params.pathParams)
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/sign-in',
    metadata: {},
  },
  signUp: {
    url: (params: SignupParams) => {
      const path = generatePath('/signUp', params.pathParams)
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/signUp',
    metadata: {},
  },
  forgotPassword: {
    url: (params: ForgotpasswordParams) => {
      const path = generatePath('/forgotPassword', params.pathParams)
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/forgotPassword',
    metadata: {},
  },
  onboardingYou: {
    url: (params: OnboardingyouParams) => {
      const path = generatePath('/onboarding/you', params.pathParams)
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/onboarding/you',
    metadata: {},
  },
  onboardingCreateWorkspace: {
    url: (params: OnboardingcreateworkspaceParams) => {
      const path = generatePath(
        '/onboarding/create-workspace',
        params.pathParams,
      )
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/onboarding/create-workspace',
    metadata: {},
  },
  onboardingJoinWorkspace: {
    url: (params: OnboardingjoinworkspaceParams) => {
      const path = generatePath('/onboarding/join-workspace', params.pathParams)
      const queryParams = params.queryParams
        ? QueryString.stringify(params.queryParams)
        : undefined
      return queryParams ? `${path}?${queryParams}` : path
    },
    path: '/onboarding/join-workspace',
    metadata: {},
  },
}

export default routes
