openapi: 3.0.3
info:
  title: Private API
  version: 1.0.0
paths:
  /SignUp:
    post:
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: OK
  /ConfirmSignUp:
    post:
      operationId: confirmSignUp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                email:
                  type: string
                password:
                  type: string
                confirmationCode:
                  type: string
              required:
                - email
                - password
                - confirmationCode
      responses:
        '201':
          description: OK
  /LogIn:
    post:
      operationId: logIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  accessToken:
                    type: string
                required:
                  - accessToken
  /GetCurrentUser:
    get:
      operationId: getCurrentUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
  /UpdateCurrentUser:
    post:
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
              required:
                - firstName
                - lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
  /GetWorkspaceAvailability:
    get:
      operationId: getWorkspaceAvailability
      parameters:
        - name: key
          in: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  isAvailable:
                    type: boolean
                required:
                  - isAvailable
  /CreateWorkspace:
    post:
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                name:
                  type: string
                key:
                  type: string
              required:
                - name
                - key
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
  /GetWorkspace:
    get:
      operationId: getWorkspace
      parameters:
        - name: id
          in: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
  /InviteToWorkspace:
    post:
      operationId: inviteToWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                workspaceId:
                  type: string
                email:
                  type: string
                  format: email
                role:
                  $ref: '#/components/schemas/WorkspaceAccountRole'
              required:
                - workspaceId
                - email
                - role
      responses:
        '201':
          description: OK
  /JoinWorkspace:
    post:
      operationId: joinWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                invitationCode:
                  type: string
              required:
                - invitationCode
      responses:
        '201':
          description: OK
  /ListWorkspaceAccounts:
    get:
      operationId: listWorkspaceAccounts
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: string
          required: true
        - name: page
          in: query
          schema:
            type: integer
          required: false
        - name: pageSize
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkspaceAccount'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - items
                  - pagination
  /CreateWorkspaceServiceAccount:
    post:
      operationId: createWorkspaceServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                workspaceId:
                  type: string
                name:
                  type: string
                role:
                  $ref: '#/components/schemas/WorkspaceAccountRole'
              required:
                - workspaceId
                - name
                - role
      responses:
        '201':
          description: OK
  /ListWorkspaceLanguages:
    get:
      operationId: listWorkspaceLanguages
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
  /AddLanguagesToWorkspace:
    post:
      operationId: addLanguagesToWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                workspaceId:
                  type: string
                languages:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - locale
                      - name
                    properties:
                      locale:
                        type: string
                      name:
                        type: string
              required:
                - workspaceId
                - languages
      responses:
        '201':
          description: OK
  /CreateProject:
    post:
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                workspaceId:
                  type: string
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                languageIds:
                  type: array
                  items:
                    type: string
              required:
                - workspaceId
                - name
                - description
                - languageIds
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /UpdateProject:
    post:
      operationId: updateProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                  nullable: true
              required:
                - id
                - name
                - description
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /GetProject:
    get:
      operationId: getProject
      parameters:
        - name: id
          in: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /AddLanguagesToProject:
    post:
      operationId: addLanguagesToProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                projectId:
                  type: string
                languageIds:
                  type: array
                  items:
                    type: string
              required:
                - projectId
                - languageIds
      responses:
        '201':
          description: OK
  /DeleteProject:
    delete:
      operationId: deleteProject
      parameters:
        - name: id
          in: query
          schema:
            type: string
          required: true
      responses:
        '204':
          description: OK
  /ListProjects:
    get:
      operationId: listProjects
      parameters:
        - name: workspaceId
          in: query
          schema:
            type: string
          required: true
        - name: page
          in: query
          schema:
            type: integer
          required: false
        - name: pageSize
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - items
                  - pagination
  /ListProjectRevisions:
    get:
      operationId: listProjectRevisions
      parameters:
        - name: projectId
          in: query
          schema:
            type: string
          required: true
        - name: state
          in: query
          schema:
            $ref: '#/components/schemas/ProjectRevisionState'
          required: false
        - name: page
          in: query
          schema:
            type: integer
          required: false
        - name: pageSize
          in: query
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectRevision'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - items
                  - pagination
components:
  schemas:
    Pagination:
      type: object
      additionalProperties: false
      required:
        - page
        - pageSize
        - pagesCount
        - itemsCount
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        pagesCount:
          type: integer
        itemsCount:
          type: integer
    CurrentUser:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        accounts:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - id
              - role
              - workspace
            properties:
              id:
                type: string
              role:
                $ref: '#/components/schemas/WorkspaceAccountRole'
              workspace:
                $ref: '#/components/schemas/Workspace'
      required:
        - id
        - firstName
        - lastName
        - email
        - accounts
        - createdAt
        - updatedAt
    Workspace:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      required:
        - id
        - key
        - name
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    WorkspaceAccount:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        role:
          $ref: '#/components/schemas/WorkspaceAccountRole'
        type:
          $ref: '#/components/schemas/WorkspaceAccountType'
        service:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - name
          properties:
            id:
              type: string
            name:
              type: string
        user:
          type: object
          nullable: true
          additionalProperties: false
          required:
            - id
            - firstName
            - lastName
          properties:
            id:
              type: string
            firstName:
              type: string
            lastName:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        invitedBy:
          type: string
          nullable: true
      required:
        - id
        - role
        - type
        - user
        - service
        - createdAt
        - updatedAt
        - invitedBy
    WorkspaceAccountRole:
      type: string
      enum:
        - owner
        - biller
        - member
        - guest
    WorkspaceAccountType:
      type: string
      enum:
        - human
        - service
    ProjectRevisionState:
      type: string
      enum:
        - open
        - closed
    Project:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        workspaceId:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      required:
        - id
        - workspaceId
        - name
        - description
        - languages
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    ProjectRevision:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        workspaceId:
          type: string
        projectId:
          type: string
        isMaster:
          type: boolean
        name:
          type: string
        state:
          $ref: '#/components/schemas/ProjectRevisionState'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        mergedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
        mergedBy:
          type: string
          nullable: true
      required:
        - id
        - workspaceId
        - projectId
        - isMaster
        - name
        - state
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    Language:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        workspaceId:
          type: string
        locale:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      required:
        - id
        - workspaceId
        - locale
        - name
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy