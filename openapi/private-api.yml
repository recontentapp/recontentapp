openapi: 3.0.3
info:
  title: Private API
  version: 1.0.0
paths:
  /system:
    get:
      operationId: getSystem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                  distribution:
                    type: string
                    enum:
                      - self-hosted
                  settings:
                    type: object
                    additionalProperties: false
                    properties:
                      signUpDisabled:
                        type: boolean
                      cdnAvailable:
                        type: boolean
                    required:
                      - signUpDisabled
                      - cdnAvailable
                additionalProperties: false
                required:
                  - version
                  - distribution
                  - settings
  /SignUp:
    post:
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              additionalProperties: false
              required:
                - email
                - password
      responses:
        '201':
          description: OK
  /ConfirmSignUp:
    post:
      operationId: confirmSignUp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                confirmationCode:
                  type: string
              additionalProperties: false
              required:
                - email
                - password
                - confirmationCode
      responses:
        '201':
          description: OK
  /LogIn:
    post:
      operationId: logIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              additionalProperties: false
              required:
                - email
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                additionalProperties: false
                required:
                  - accessToken
  /GetCurrentUser:
    get:
      operationId: getCurrentUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
  /UpdateCurrentUser:
    post:
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
              additionalProperties: false
              required:
                - firstName
                - lastName
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
  /GetWorkspaceAvailability:
    get:
      operationId: getWorkspaceAvailability
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isAvailable:
                    type: boolean
                additionalProperties: false
                required:
                  - isAvailable
  /CreateWorkspace:
    post:
      operationId: createWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
              additionalProperties: false
              required:
                - name
                - key
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
  /GetWorkspace:
    get:
      operationId: getWorkspace
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
  /InviteToWorkspace:
    post:
      operationId: inviteToWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspaceId:
                  type: string
                email:
                  type: string
                  format: email
                role:
                  $ref: '#/components/schemas/WorkspaceAccountRole'
              additionalProperties: false
              required:
                - workspaceId
                - email
                - role
      responses:
        '201':
          description: OK
  /JoinWorkspace:
    post:
      operationId: joinWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                invitationCode:
                  type: string
              additionalProperties: false
              required:
                - invitationCode
      responses:
        '201':
          description: OK
  /ListWorkspaceInvitations:
    get:
      operationId: listWorkspaceInvitations
      parameters:
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      required:
                        - id
                        - email
                        - role
                        - createdAt
                        - expiredAt
                        - createdBy
                      properties:
                        id:
                          type: string
                        email:
                          type: string
                          format: email
                        role:
                          $ref: '#/components/schemas/WorkspaceAccountRole'
                        createdBy:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        expiredAt:
                          type: string
                          format: date-time
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                additionalProperties: false
                required:
                  - items
                  - pagination
  /ListWorkspaceAccounts:
    get:
      operationId: listWorkspaceAccounts
      parameters:
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - human
              - service
              - all
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkspaceAccount'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                additionalProperties: false
                required:
                  - items
                  - pagination
  /CreateWorkspaceServiceAccount:
    post:
      operationId: createWorkspaceServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspaceId:
                  type: string
                name:
                  type: string
                role:
                  $ref: '#/components/schemas/WorkspaceAccountRole'
              additionalProperties: false
              required:
                - workspaceId
                - name
                - role
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiKey:
                    type: string
                additionalProperties: false
                required:
                  - apiKey
  /DeleteWorkspaceServiceAccount:
    delete:
      operationId: deleteWorkspaceServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
              additionalProperties: false
              required:
                - id
      responses:
        '204':
          description: OK
  /ListWorkspaceLanguages:
    get:
      operationId: listWorkspaceLanguages
      parameters:
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
  /AddLanguagesToWorkspace:
    post:
      operationId: addLanguagesToWorkspace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspaceId:
                  type: string
                languages:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - locale
                      - name
                    properties:
                      locale:
                        type: string
                      name:
                        type: string
              additionalProperties: false
              required:
                - workspaceId
                - languages
      responses:
        '201':
          description: OK
  /CreateProject:
    post:
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                workspaceId:
                  type: string
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                languageIds:
                  type: array
                  items:
                    type: string
              additionalProperties: false
              required:
                - workspaceId
                - name
                - description
                - languageIds
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /UpdateProject:
    post:
      operationId: updateProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                  nullable: true
              additionalProperties: false
              required:
                - id
                - name
                - description
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /GetProject:
    get:
      operationId: getProject
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /AddLanguagesToProject:
    post:
      operationId: addLanguagesToProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
                languageIds:
                  type: array
                  items:
                    type: string
              additionalProperties: false
              required:
                - projectId
                - languageIds
      responses:
        '201':
          description: OK
  /DeleteProject:
    delete:
      operationId: deleteProject
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  type: string
              additionalProperties: false
              required:
                - projectId
      responses:
        '204':
          description: OK
  /ListProjects:
    get:
      operationId: listProjects
      parameters:
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                additionalProperties: false
                required:
                  - items
                  - pagination
  /ListProjectRevisions:
    get:
      operationId: listProjectRevisions
      parameters:
        - name: projectId
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ProjectRevisionState'
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectRevision'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                additionalProperties: false
                required:
                  - items
                  - pagination
  /GetProjectRevision:
    get:
      operationId: getProjectRevision
      parameters:
        - name: revisionId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRevision'
  /GetReferenceableAccounts:
    get:
      operationId: getReferenceableAccounts
      parameters:
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: object
                    additionalProperties:
                      type: string
                additionalProperties: false
                required:
                  - accounts
  /ListPhrases:
    get:
      operationId: listPhrases
      parameters:
        - name: revisionId
          in: query
          required: true
          schema:
            type: string
        - name: key
          in: query
          required: false
          schema:
            type: string
        - name: translated
          in: query
          required: false
          schema:
            type: string
        - name: untranslated
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/PhraseItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                additionalProperties: false
                required:
                  - items
                  - pagination
  /CreatePhrase:
    post:
      operationId: createPhrase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                revisionId:
                  type: string
                key:
                  type: string
              additionalProperties: false
              required:
                - revisionId
                - key
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
  /GetPhrase:
    get:
      operationId: getPhrase
      parameters:
        - name: phraseId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
  /UpdatePhraseKey:
    post:
      operationId: updatePhraseKey
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phraseId:
                  type: string
                key:
                  type: string
              additionalProperties: false
              required:
                - phraseId
                - key
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
  /TranslatePhrase:
    post:
      operationId: translatePhrase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phraseId:
                  type: string
                translations:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - languageId
                      - content
                    properties:
                      languageId:
                        type: string
                      content:
                        type: string
              additionalProperties: false
              required:
                - phraseId
                - translations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Phrase'
  /DeletePhrase:
    delete:
      operationId: deletePhrase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phraseId:
                  type: string
              additionalProperties: false
              required:
                - phraseId
      responses:
        '204':
          description: OK
  /BatchDeletePhrase:
    delete:
      operationId: batchDeletePhrase
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
              additionalProperties: false
              required:
                - ids
      responses:
        '204':
          description: OK
  /ImportPhrases:
    post:
      operationId: importPhrases
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                fileFormat:
                  $ref: '#/components/schemas/FileFormat'
                revisionId:
                  type: string
                languageId:
                  type: string
                mappingKeyColumnIndex:
                  type: integer
                mappingRowStartIndex:
                  type: integer
                mappingSheetIndex:
                  type: integer
                mappingTranslationColumnIndex:
                  type: integer
              additionalProperties: false
              required:
                - file
                - fileFormat
                - revisionId
                - languageId
      responses:
        '201':
          description: OK
  /GeneratePhrasesExportLink:
    post:
      operationId: generatePhrasesExportLink
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                revisionId:
                  type: string
                languageId:
                  type: string
                fileFormat:
                  $ref: '#/components/schemas/FileFormat'
                includeEmptyTranslations:
                  type: boolean
              additionalProperties: false
              required:
                - revisionId
                - languageId
                - fileFormat
                - includeEmptyTranslations
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                additionalProperties: false
                required:
                  - link
  /GetPhrasesExport:
    get:
      operationId: getPhrasesExport
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /ListDestinations:
    get:
      operationId: listDestinations
      parameters:
        - name: projectId
          in: query
          required: true
          schema:
            type: string
        - name: revisionId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DestinationItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                additionalProperties: false
                required:
                  - items
                  - pagination
  /CreateCDNDestination:
    post:
      operationId: createCDNDestination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                revisionId:
                  type: string
                name:
                  type: string
                fileFormat:
                  $ref: '#/components/schemas/FileFormat'
                includeEmptyTranslations:
                  type: boolean
              additionalProperties: false
              required:
                - type
                - revisionId
                - name
                - fileFormat
                - includeEmptyTranslations
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
  /CreateAWSS3Destination:
    post:
      operationId: createAWSS3Destination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                revisionId:
                  type: string
                name:
                  type: string
                fileFormat:
                  $ref: '#/components/schemas/FileFormat'
                includeEmptyTranslations:
                  type: boolean
                objectsPrefix:
                  type: string
                awsRegion:
                  type: string
                awsBucketId:
                  type: string
                awsAccessKeyId:
                  type: string
                awsSecretAccessKey:
                  type: string
              additionalProperties: false
              required:
                - type
                - revisionId
                - name
                - fileFormat
                - includeEmptyTranslations
                - awsRegion
                - awsBucketId
                - awsAccessKeyId
                - awsSecretAccessKey
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
  /CreateGoogleCloudStorageDestination:
    post:
      operationId: createGoogleCloudStorageDestination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                revisionId:
                  type: string
                name:
                  type: string
                fileFormat:
                  $ref: '#/components/schemas/FileFormat'
                includeEmptyTranslations:
                  type: boolean
                objectsPrefix:
                  type: string
                googleCloudProjectId:
                  type: string
                googleCloudBucketId:
                  type: string
                googleCloudServiceAccountKey:
                  type: string
              additionalProperties: false
              required:
                - type
                - revisionId
                - name
                - fileFormat
                - includeEmptyTranslations
                - googleCloudProjectId
                - googleCloudBucketId
                - googleCloudServiceAccountKey
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
  /GetDestination:
    get:
      operationId: getDestination
      parameters:
        - name: destinationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
  /SyncDestination:
    post:
      operationId: syncDestination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                destinationId:
                  type: string
              additionalProperties: false
              required:
                - destinationId
      responses:
        '204':
          description: OK
  /DeleteDestination:
    delete:
      operationId: deleteDestination
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                destinationId:
                  type: string
              additionalProperties: false
              required:
                - destinationId
      responses:
        '204':
          description: OK
components:
  schemas:
    Empty:
      type: string
      enum:
        - null
      nullable: true
    Pagination:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        pagesCount:
          type: integer
        itemsCount:
          type: integer
      additionalProperties: false
      required:
        - page
        - pageSize
        - pagesCount
        - itemsCount
    CurrentUser:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        accounts:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - id
              - role
              - workspace
            properties:
              id:
                type: string
              role:
                $ref: '#/components/schemas/WorkspaceAccountRole'
              workspace:
                $ref: '#/components/schemas/Workspace'
      additionalProperties: false
      required:
        - id
        - firstName
        - lastName
        - email
        - accounts
        - createdAt
        - updatedAt
    Workspace:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - key
        - name
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    WorkspaceAccount:
      type: object
      properties:
        id:
          type: string
        role:
          $ref: '#/components/schemas/WorkspaceAccountRole'
        type:
          $ref: '#/components/schemas/WorkspaceAccountType'
        service:
          type: object
          additionalProperties: false
          nullable: true
          properties:
            id:
              type: string
            name:
              type: string
          required:
            - id
            - name
        user:
          type: object
          additionalProperties: false
          nullable: true
          properties:
            id:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
          required:
            - id
            - firstName
            - lastName
            - email
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        invitedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - role
        - type
        - user
        - service
        - createdAt
        - updatedAt
        - invitedBy
    WorkspaceAccountRole:
      type: string
      enum:
        - owner
        - biller
        - member
        - guest
    WorkspaceAccountType:
      type: string
      enum:
        - human
        - service
    ProjectRevisionState:
      type: string
      enum:
        - open
        - closed
    FileFormat:
      type: string
      enum:
        - json
        - yaml
        - nested_json
        - nested_yaml
        - excel
        - csv
    Project:
      type: object
      properties:
        id:
          type: string
        workspaceId:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        masterRevisionId:
          type: string
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - workspaceId
        - masterRevisionId
        - name
        - description
        - languages
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    ProjectRevision:
      type: object
      properties:
        id:
          type: string
        workspaceId:
          type: string
        projectId:
          type: string
        isMaster:
          type: boolean
        name:
          type: string
        state:
          $ref: '#/components/schemas/ProjectRevisionState'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        mergedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
        mergedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - workspaceId
        - projectId
        - isMaster
        - name
        - state
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    Language:
      type: object
      properties:
        id:
          type: string
        workspaceId:
          type: string
        locale:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - workspaceId
        - locale
        - name
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    PhraseItem:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        revisionId:
          type: string
        projectId:
          type: string
        workspaceId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - key
        - revisionId
        - projectId
        - workspaceId
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    Phrase:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        revisionId:
          type: string
        projectId:
          type: string
        workspaceId:
          type: string
        translations:
          type: array
          items:
            type: object
            required:
              - id
              - languageId
              - content
              - createdAt
              - updatedAt
              - createdBy
              - updatedBy
            properties:
              id:
                type: string
              languageId:
                type: string
              content:
                type: string
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              createdBy:
                type: string
              updatedBy:
                type: string
                nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - key
        - revisionId
        - projectId
        - workspaceId
        - translations
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    DestinationType:
      type: string
      enum:
        - cdn
        - aws_s3
        - google_cloud_storage
    DestinationItem:
      type: object
      properties:
        id:
          type: string
        workspaceId:
          type: string
        revisionId:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/DestinationType'
        active:
          type: boolean
        lastSyncError:
          type: string
          nullable: true
        lastSyncAt:
          type: string
          format: date-time
          nullable: true
        lastSuccessfulSyncAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - workspaceId
        - revisionId
        - name
        - type
        - active
        - lastSyncError
        - lastSyncAt
        - lastSuccessfulSyncAt
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
    Destination:
      type: object
      properties:
        id:
          type: string
        workspaceId:
          type: string
        revisionId:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/DestinationType'
        active:
          type: boolean
        lastSyncError:
          type: string
          nullable: true
        lastSyncAt:
          type: string
          format: date-time
          nullable: true
        lastSuccessfulSyncAt:
          type: string
          format: date-time
          nullable: true
        configCDN:
          oneOf:
            - $ref: '#/components/schemas/DestinationConfigCDN'
            - $ref: '#/components/schemas/Empty'
        configAWSS3:
          oneOf:
            - $ref: '#/components/schemas/DestinationConfigAWSS3'
            - $ref: '#/components/schemas/Empty'
        configGoogleCloudStorage:
          oneOf:
            - $ref: '#/components/schemas/DestinationConfigGoogleCloudStorage'
            - $ref: '#/components/schemas/Empty'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
          nullable: true
      additionalProperties: false
      required:
        - id
        - workspaceId
        - revisionId
        - name
        - type
        - active
        - lastSyncError
        - lastSyncAt
        - lastSuccessfulSyncAt
        - createdAt
        - updatedAt
        - createdBy
        - updatedBy
        - configCDN
        - configAWSS3
        - configGoogleCloudStorage
    DestinationConfigCDN:
      type: object
      properties:
        id:
          type: string
        fileFormat:
          $ref: '#/components/schemas/FileFormat'
        includeEmptyTranslations:
          type: boolean
        urls:
          type: array
          items:
            type: string
      additionalProperties: false
      required:
        - id
        - fileFormat
        - includeEmptyTranslations
        - urls
    DestinationConfigAWSS3:
      type: object
      properties:
        id:
          type: string
        fileFormat:
          $ref: '#/components/schemas/FileFormat'
        includeEmptyTranslations:
          type: boolean
        objectsPrefix:
          type: string
          nullable: true
        region:
          type: string
        bucketId:
          type: string
      additionalProperties: false
      required:
        - id
        - fileFormat
        - includeEmptyTranslations
        - objectsPrefix
        - bucketId
        - region
    DestinationConfigGoogleCloudStorage:
      type: object
      properties:
        id:
          type: string
        fileFormat:
          $ref: '#/components/schemas/FileFormat'
        includeEmptyTranslations:
          type: boolean
        objectsPrefix:
          type: string
          nullable: true
        projectId:
          type: string
        bucketId:
          type: string
      additionalProperties: false
      required:
        - id
        - fileFormat
        - includeEmptyTranslations
        - objectsPrefix
        - projectId
        - bucketId
